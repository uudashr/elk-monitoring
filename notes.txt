https://www.elastic.co/guide/en/apm/get-started/current/observability-integrations.html
https://www.elastic.co/guide/en/apm/agent/go/current/log-correlation.html

https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
https://www.elastic.co/guide/en/kibana/current/docker.html
https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-docker.html
https://www.elastic.co/guide/en/beats/filebeat/7.6/running-on-docker.html

https://logz.io/blog/docker-logging/
https://logz.io/learn/docker-monitoring-elk-stack/

https://www.elastic.co/guide/en/apm/get-started/current/observability-integrations.html

https://grafana.com/docs/grafana/latest/installation/docker/

https://git.webhosting.rug.nl/HPC/prometheus
https://github.com/vegasbrianc/prometheus

Series
https://blog.pvincent.io/2017/12/prometheus-blog-series-part-1-metrics-and-labels/
https://blog.pvincent.io/2017/12/prometheus-blog-series-part-2-metric-types/
https://blog.pvincent.io/2017/12/prometheus-blog-series-part-3-exposing-and-collecting-metrics/
https://blog.pvincent.io/2017/12/prometheus-blog-series-part-4-instrumenting-code-in-go-and-java/
https://blog.pvincent.io/2017/12/prometheus-blog-series-part-5-alerting-rules/

http://localhost:5601/
docker-compose up -d --remove-orphans --build && docker-compose logs -f
curl --header "Content-Type: application/json" --request POST --data '{"msg": "Hello"}' http://localhost:8080/echo
curl -i http://localhost:8080/fib/0
curl -i http://localhost:8080/fib/10
curl -i http://localhost:8080/healthz
curl -i http://localhost:8080/metrics

echo '{"msg": "Hello"} | vegeta
echo "POST http://localhost:8080/echo" | vegeta attack -duration=5s | vegeta report
jq -ncM '{method: "POST", url: "http://localhost:8080/echo", body: {"msg": "Hello"} | @base64, header: {"Content-Type": ["application/json"]}}' | vegeta attack -format=json -duration=5s | vegeta report